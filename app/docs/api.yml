openapi: 3.0.0
servers:
  - url: https://www.bhut.com.br
info:
  version: 1.0.0
  title: Animal Adoption API
  description: API to animal adoption web site
  contact:
    name: Animal Adoption
    url: 'https://www.animal-adoption.com.br'
    email: 'contato@animal-adoption.com.br'
  license:
    name: MIT
    url : https://api.github.com/licenses/mit
tags:
  - name: Auth
    description: Authentication related endpoints
  - name: Adoption Data
    description: Adoption Data related endpoints
  - name: Animals
    description: Animals related endpoints
  - name: People
    description: People related endpoints
  - name: Vaccines
    description: Vaccines related endpoints
  - name: Vaccinated Animals
    description: Vaccinated Animals related endpoints
  - name: Users
    description: Users related endpoints
paths:
  /auth/token:
    post:
      summary: 'Create authentication'
      description: 'Generate JWT token'
      operationId: 'postAuthToken'
      tags:
        - Auth
      requestBody:
        description: 'Data to authenticate user'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        '200':
          description: 'Authenticated user JWT token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: 'Invalid requisition'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '403':
          description: 'Access denied'
        '500':
          description: 'Internal error in service'
components:
  schemas:
    AuthRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: 'Username to access system'
          example: 'admin@gmail.com'
        password:
          type: string
          format: password
          description: 'Password to access system'
          example: 'admin@123'
    AuthResponse:
      type: object
      required:
        - acessToken
        - tokenType
        - expiresIn
      properties:
        accessToken:
          type: string
          description: 'Jwt token'
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7InV1aWQiOiJkMzZhMGZlYS0yMmZlLTQ4MzItYmE2Mi03ZTQzMzNjMzEwMDEifSwiaWF0IjoxNjUzMTQ0OTgyLCJleHAiOjE2NTMxNDUwNDJ9.9KpVJJ9Z-6w-4hcwTVEIOUCS4ouq9j9lagJT5T2egUs'
        tokenType:
          type: string
          description: 'Token type'
          example: 'Bearer'
        expiresIn:
          type: integer
          description: 'Minutes to token expires'
          example: 60
    ValidationErrorResponse:
      required:
        - code
        - message
      properties:
        code:
          description: 'Error code'
          type: string
          example: 'INVALID_FIELD'
        message:
          description: 'Error message'
          type: string
          example: 'The field username is required'
  securitySchemes:
    JwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
